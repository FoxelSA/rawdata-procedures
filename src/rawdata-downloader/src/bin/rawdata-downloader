#!/bin/bash
# rawdata-procedures - Camera raw data procedures
#
# Copyright (c) 2013-2015 FOXEL SA - http://foxel.ch
# Please read <http://foxel.ch/license> for more information.
#
#
# Author(s):
#
#       Luc Deschenaux <l.deschenaux@foxel.ch>
#
#
# This file is part of the FOXEL project <http://foxel.ch>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Additional Terms:
#
#       You are required to preserve legal notices and author attributions in
#       that material or in the Appropriate Legal Notices displayed by works
#       containing it.
#
#       You are required to attribute the work as explained in the "Usage and
#       Attribution" section of <http://foxel.ch/license>.

_UID=$UID
_GID=1000

SCRIPT=$(basename $0)

log() {
  echo $(date +%F_%r) $SCRIPT $BASHPID $@ >&2
}

# format stdin for logginG
logstdout() {
  while read l ; do
    echo $(date +%F_%R:%S) $SCRIPT $BASHPID $@ $l >&2
  done
}

DESTINATION=$1

[ -z "$DESTINATION" ] && exit 1

# download rawdata from camera modules
DEST=$(rawdata-download $DESTINATION)
EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ] ; then
 log ${LINENO} rawdata-download exit code $EXIT_CODE
 exit $EXIT_CODE
fi


firsttimestamp() {
  find $1 |
  grep -E -e '\/[0-9_]{17}' |
  while read f ; do
    b=$(basename $f)
    echo ${b:0:10}
  done |
  sort -u |
  head -n 1
}

# get first timestamp in rsync folder
TIMESTAMP=$(firsttimestamp $DEST/rsync)

if [ -z "$TIMESTAMP" ] ; then
  log ${LINENO} first timestamp not found
  exit 1
fi

# move files
mkdir -p $DEST/raw/sync/$TIMESTAMP/mov/ 2>&1 | logstdout || exit 1
log ${LINENO} moving files from $DEST/rsync/ to $DEST/raw/sync/$TIMESTAMP/mov/
if ! rsync -av --inplace --exclude='lost+found' --remove-source-files --chmod=u+w,a+rX $DEST/rsync/ $DEST/raw/sync/$TIMESTAMP/mov/ 2>&1 | logstdout ${LINENO} ; then
  exit 1
  log ${LINENO} error: failed to move files from $DEST/rsync/ to $DEST/raw/sync/$TIMESTAMP/mov/
fi
log ${LINENO} success: moved files from $DEST/rsync/ to $DEST/raw/sync/$TIMESTAMP/mov/

# remove remaining source files
log ${LINENO} removing source rsync folder
rm /$DEST/rsync -r

# set permissions for directories
chown $_UID.$_GID $DEST/raw $DEST/raw/sync $DEST/raw/sync/$TIMESTAMP $DEST/raw/sync/$TIMESTAMP/mov
chown -R $_UID.$_GID $DEST/raw/sync/$TIMESTAMP/mov
chmod 0777 $DEST/raw $DEST/raw/sync $DEST/raw/sync/$TIMESTAMP $DEST/raw/sync/$TIMESTAMP/mov
chmod -R 0777 $DEST/raw/sync/$TIMESTAMP/mov

# return mac address and first timestamp
echo $(basename $DEST) $TIMESTAMP
